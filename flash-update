#!/bin/bash

set -e

if [ -z "$1" ]; then
    PACKAGE="$OUT/ota-dev.zip"
else
    PACKAGE="$1"
fi

GET_PROGRESS="adb shell tail /cache/recovery/uncrypt_status"
GET_START="adb shell getprop init.svc.uncrypt"
MAX_WAIT=30

if [ ! "$2" ]; then dutID=$(adb devices | grep -v 'List' | awk '{print ($1)}'); else dutID=$2; fi

function wait_for_adb {
    while [ -z "$(adb devices | grep $dutID | awk '{print($1)}')" ]; do
        sleep 1
    done
}

function wait_for_uncrypt {
    echo "Uncrypting $(basename $PACKAGE)..."
    i=0
    go="stopped"
    while [ "$go" = "stopped" ]; do
	sleep 1 && go=$($GET_START | sed 's/\r//g')
	if [ $((++i)) -gt $MAX_WAIT ]; then
	    echo "Error: uncrypt did not start"
	    exit -1
	fi
    done
    progress=0
    while [ $progress -ne 100 ]; do
	progress=$($GET_PROGRESS | tail -1 | sed 's/\r//g')
	echo -ne "\r$progress%"
	sleep 1
    done
    echo " done!"
}

echo "Waiting for device : $dutID"
wait_for_adb
echo "Setting root permissions..."
adb -s $dutID root
sleep 1
wait_for_adb

echo "Copying OTA image $(basename $PACKAGE) to device..."
adb -s $dutID push $PACKAGE /data/local/tmp/update.zip
adb -s $dutID shell "mkdir -p /cache/recovery"
adb -s $dutID shell "echo \"/data/local/tmp/update.zip\" > /cache/recovery/uncrypt_file"
adb -s $dutID shell start uncrypt
wait_for_uncrypt
echo "Setting parameters and rebooting into recovery console..."
adb -s $dutID shell "echo \"--update_package=@/cache/recovery/block.map\" > /cache/recovery/command"
adb -s $dutID shell start pre-recovery
