#!/bin/bash

# Bail on any errors
set -e

if [ -z "$ANDROID_BUILD_TOP" ]; then
    echo "Run lunch first!"
    exit 1
fi

function usage {
    echo "Usage:"
    echo
    echo "  fastboot-test-prepare <path to TFP zip file> [-V <variant>]"
    echo "    Generate a set of images from a target-files-package to use during testing"
    echo
    echo "Valid options:"
    echo "-V <variant>: Device variant for IRDA builds"
}

if [[ -z "$1" ]]; then
    usage
    exit 1
fi

export tfp=$1
shift $((OPTIND))

export IRDA_VARIANT=
while getopts "V:" opt; do
    case $opt in
        V)
            export IRDA_VARIANT="--variant $OPTARG"
            ;;
        \?)
            usage
            exit 1
            ;;
    esac
done

pushd $ANDROID_BUILD_TOP &> /dev/null

rm -rf fastboot
mkdir fastboot

cp $tfp fastboot/tfp.zip

make clean
make -j16 fastboot otatools keystore_signer

./build/tools/releasetools/img_from_target_files --verbose fastboot/tfp.zip fastboot/update.zip
./device/intel/build/releasetools/flashfiles_from_target_files --verbose $IRDA_VARIANT fastboot/tfp.zip fastboot/flashfiles.zip
unzip fastboot/flashfiles.zip -d fastboot/

# if .fls files are found extract fastboot images out of them
for file in fastboot/*.fls
do
    dirname=${file%.fls}
    filename_signed=${dirname##*/}
    filename=${filename_signed%_signed}
    ./device/intel/common/tools/FlsTool -o ${dirname} -x $file
    cp ${dirname}/${filename}.*_LoadMap0.bin fastboot/${filename}.img
    rm -rf ${dirname} $file
done

simg2img fastboot/system.img fastboot/unsparse.img

# if sofia bootloader image is found do not try to generate it
if [ ! -e fastboot/fwu_image.img ]; then
    ./device/intel/build/releasetools/bootloader_from_target_files --bootable --verbose fastboot/tfp.zip fastboot/fastboot-usb.zip
fi

cp device/intel/build/testkeys/oem.pk8 fastboot/oem.pk8
cp device/intel/build/testkeys/oem.x509.pem fastboot/oem.x509.pem
openssl rsa -pubout -inform DER -outform DER -in device/intel/build/testkeys/production-test/verity.pk8 -out fastboot/verity.pub
keystore_signer fastboot/oem.pk8 fastboot/oem.x509.pem fastboot/keystore fastboot/verity.pub

popd
